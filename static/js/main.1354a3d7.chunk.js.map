{"version":3,"sources":["components/Card/Card.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/Navbar/Navbar.jsx","App.jsx","index.js"],"names":["Card","_ref","clickHandler","id","image","name","react_default","a","createElement","className","src","alt","onClick","Footer","Header","Navbar","message","score","topScore","href","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeAnimation","element","document","getElementById","state","isGuessCorrect","classList","remove","addAnimation","isCorrect","add","toggleAnimation","setTimeout","handleSaveClick","tilez","tiles","tileClicked","filter","tile","clicked","handleIncorrectClick","handleCorrectClick","randomizeCharacters","setState","characters","sort","b","Math","random","maxScore","messageClass","resetGame","i","length","_this2","_this$state","Navbar_Navbar","Header_Header","map","Card_Card","key","Footer_Footer","Component","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.1354a3d7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Card({ clickHandler, id, image, name }) {\r\n  return (\r\n    <div className=\"card-holder\">\r\n      <img\r\n        src={image}\r\n        alt={name}\r\n        className=\"card-select grow img-thumbnail m-2 pointer\"\r\n        onClick={() => clickHandler(id)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n  \r\n    <div className=\"colors position-relative footer footer-100 footer-mgn navbar p-0\">\r\n        <div className=\"   \">\r\n          Copyright Peggy Ekwalla - 2019\r\n      </div>\r\n      <span className=\"text-muted\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"align-items-center bg-header jumbotron header-hgt header-pad head-mar-top nav-shadow neon text-center yx-auto text-center\">\r\n      <h1 className=\"flicker-1 header-font\">\r\n        Click on an image to earn points,\r\n      </h1>\r\n      <h1 className=\"flicker-1 header-font\">\r\n        But don't click on any more than once!\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Navbar({ message, score, topScore }) {\r\n  return (\r\n    <nav className=\"bg-nav fixed-top navbar nav-height nav-shadow p-0 tp-text\">\r\n      <ul className=\"row center list-inline m-0 nav-fill nav-height nav-width\">\r\n        <li className=\"col list-inline-item my-auto nav-calc-font p-0 m-0 text-center\">\r\n          <a\r\n            className=\"nav-calc-font navbar-brand p-0 m-0 title-line-hgt\"\r\n            href=\"/\"\r\n          >\r\n            CELEBRITIES <br />\r\n            MEMORY GAME\r\n          </a>\r\n        </li>\r\n        <li\r\n          id=\"animate-this\"\r\n          className=\"col list-inline-item my-auto nav-calc-font m-0 p-0 text-center\"\r\n        >\r\n          {message}\r\n        </li>\r\n        <li className=\"col list-inline-item my-auto nav-calc-font m-0 p-0 score-li-width text-center\">\r\n          SCORE: {score} | TOP SCORE: {topScore}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import \"./App.css\";\r\n\r\n// This actually imports the React node modules\r\nimport React, { Component } from \"react\";\r\n\r\nimport Card from \"./components/Card\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport tiles from \"./tiles.json\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isGuessCorrect: true,\r\n      tiles: tiles,\r\n      score: 0,\r\n      maxScore: 1,\r\n      topScore: 0,\r\n      message: \"CLICK AN IMAGE TO START!\"\r\n    };\r\n  }\r\n\r\n  /*\r\n   *  ----------------------------------------------------------------------------------\r\n   *\r\n   *  Functions for handling animation\r\n   *\r\n   *  ----------------------------------------------------------------------------------\r\n   */\r\n\r\n  // REMOVES animation CSS class\r\n  removeAnimation = () => {\r\n    // Grab the text at the top middle of the page\r\n    let element = document.getElementById(\"animate-this\");\r\n    // If the guess is correct...\r\n    if (this.state.isGuessCorrect) {\r\n      // ...remove the animation style of the correct guess\r\n      element.classList.remove(\"jello-vertical\");\r\n    }\r\n    // If the guess is incorrect...\r\n    if (!this.state.isGuessCorrect) {\r\n      // ...remove the animation style of the incorrect guess\r\n      element.classList.remove(\"shake-horizontal\");\r\n    }\r\n  };\r\n\r\n  // ADDS animation CSS class\r\n  addAnimation = isCorrect => {\r\n    // Grab the text at the top middle of the page\r\n    let element = document.getElementById(\"animate-this\");\r\n    // If the guess is correct...\r\n    if (isCorrect) {\r\n      // ...add the animation style of the correct guess\r\n      element.classList.add(\"jello-vertical\");\r\n    }\r\n    // If the guess is incorrect...\r\n    if (!isCorrect) {\r\n      // ...add the animation style of the incorrect guess\r\n      element.classList.add(\"shake-horizontal\");\r\n    }\r\n  };\r\n\r\n  // TOGGLES the CSS class for animation\r\n  toggleAnimation = isCorrect => {\r\n    // If the guess is correct...\r\n    if (isCorrect) {\r\n      // Add animation\r\n      this.addAnimation(true);\r\n      // Wait a split second and then remove it\r\n      setTimeout(this.removeAnimation, 500);\r\n    }\r\n    // If the guess is incorrect...\r\n    if (!isCorrect) {\r\n      // Add animation\r\n      this.addAnimation(false);\r\n      // Wait a split second and then remove it\r\n      setTimeout(this.removeAnimation, 500);\r\n    }\r\n  };\r\n\r\n  /*\r\n   *  ----------------------------------------------------------------------------------\r\n   *\r\n   *  Functions for game logic\r\n   *\r\n   *  ----------------------------------------------------------------------------------\r\n   */\r\n\r\n  // Main click handler function\r\n  handleSaveClick = id => {\r\n    // Variable to hold the tiles state.\r\n    const tilez = this.state.tiles;\r\n    // Search through character tiles to find the one that matches the clicked id.\r\n    const tileClicked = tilez.filter(tile => tile.id === id);\r\n\r\n    // If the tile isn't clicked...\r\n    if (!tileClicked[0].clicked) {\r\n      // ...set it to now be clicked\r\n      tileClicked[0].clicked = true;\r\n      // ...call this function to register the correct guess\r\n      this.handleCorrectClick();\r\n      // ...add the bouncy animation for correct guess\r\n      this.toggleAnimation(true);\r\n\r\n      // ... randomize character tiles\r\n      this.randomizeCharacters(tilez);\r\n\r\n      this.setState({ tilez });\r\n    } else {\r\n      this.handleIncorrectClick();\r\n      this.toggleAnimation(false);\r\n    }\r\n  };\r\n\r\n  // Function to randomize the characters\r\n  randomizeCharacters = characters => {\r\n    characters.sort((a, b) => {\r\n      return 0.5 - Math.random();\r\n    });\r\n  };\r\n\r\n  // Handler for correct guesses/clicks\r\n  handleCorrectClick = () => {\r\n    this.setState({ isGuessCorrect: true });\r\n    if (this.state.score + 1 > this.state.topScore) {\r\n      this.setState({ topScore: this.state.topScore + 1 });\r\n    }\r\n    if (this.state.score + 1 >= this.state.maxScore) {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        message: \"CONGRATS! YOU WIN!\",\r\n        messageClass: \"correct\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        message: \"YOU GUESSED CORRECTLY!\",\r\n        messageClass: \"correct\"\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handler for incorrect guesses/clicks\r\n  handleIncorrectClick = () => {\r\n    this.setState({\r\n      message: \"INCORRECT. PLAY AGAIN?\",\r\n      isGuessCorrect: false\r\n    });\r\n    // this.toggleIncorrectAnimation();\r\n    this.resetGame();\r\n  };\r\n\r\n  // Resets the game\r\n  resetGame = id => {\r\n    const tilez = this.state.tiles;\r\n    for (let i = 0; i < tilez.length; i++) {\r\n      tilez[i].clicked = false;\r\n    }\r\n    this.setState({ score: 0 });\r\n  };\r\n\r\n  /*\r\n   *  ----------------------------------------------------------------------------------\r\n   *\r\n   *  Render and Return\r\n   *\r\n   *  ----------------------------------------------------------------------------------\r\n   */\r\n\r\n  // Render the App component on the page\r\n  render() {\r\n    const { message, score, tiles, topScore } = this.state;\r\n    return (\r\n      <div className=\"fluid-container lodge h-100vh\">\r\n        <Navbar\r\n          className=\"row\"\r\n          score={score}\r\n          topScore={topScore}\r\n          message={message}\r\n        />\r\n        <Header className=\"bg-header row\" />\r\n\r\n        <div className=\"d-flex justify-content-center main-content mx-auto padding-main flex-wrap row\">\r\n          {tiles.map(({ id, name, image, clicked }) => (\r\n            <Card\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              image={image}\r\n              clicked={clicked}\r\n              clickHandler={this.handleSaveClick}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <Footer className=\"footer-mgn row\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import \"./index.css\";\r\n\r\nimport App from \"./App.jsx\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}